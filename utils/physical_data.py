from math import *
import numpy as np

DENSITY = {"Ni": 8908, "Fe": 7800, "Ti": 4506, "Cr": 7140, "Al": 2700, "N": 1.17, "O": 1, "None": 1}  # kg/m3
MOLAR_MASS = {"Ti": 0.0479, "Ni": 0.0587, "Fe": 0.0558, "Cr": 0.052, "Al": 0.027, "N": 0.014, "O": 0.016, "TiN": 0.0619,
              "None": 1}  # kg/mol


def get_diff_coeff(temperature, cond):
    diff_coeff = {"N in Ni20Cr2Ti Krupp": 4.7 * 10 ** -6 * exp(-125720 / (8.314 * (273 + temperature))),
                  "O in Ni at 1000 Smithells_Ransley": 2.4 * 10**-13,
                  "O in Ni Krupp": 4.9 * 10 ** -6 * exp(-164000 / (8.314 * (273 + temperature))),
                  "N in Ni Krupp": 1.99 * 10 ** -5 * exp(-132640 / (8.314 * (273 + temperature))),
                  "Al in Ni Krupp": 1.85 * 10 ** -4 * exp(-260780 / (8.314 * (273 + temperature))),
                  "Cr in Ni Krupp": 5.2 * 10 ** -4 * exp(-289000 / (8.314 * (273 + temperature))),
                  "Ti in Ni Krupp": 4.1 * 10 ** -4 * exp(-275000 / (8.314 * (273 + temperature))),
                  "N in Ni Katrin PHD": 1.99 * 10 ** -5 * exp(-132640 / (8.314 * (273 + temperature))),
                  "N in Ni Savva at 1020": 5 * 10 ** -11,
                  "Ti in Ni Savva at 1020": 5 * 10 ** -15,
                  "N in alfa-Fe Rozendaal": 6.6 * 10 ** -7 * exp(-77900 / (8.314 * (273 + temperature))),
                  "Test": 1 * (10 ** -13),
                  "Test_slower": 1.4 * (10 ** -9),
                  "Ti in Ni Krupp boost": 2.13 * 10 ** -13,
                  "Test Diffusion in precipitation": 6.18 * 10 ** -20,
                  "N in FeAlMn": 2.1 * 10 ** -8 * exp(-93517 / (8.314 * (273 + temperature))),
                  "Al in FeAlMn": 2.1 * 10 ** -10 * exp(-93517 / (8.314 * (273 + temperature))),
                  "Cr in NiCr": 0.03 * exp(-40800/(8.314 * (273 + temperature))),
                  "N in NiCr at 800Â°C": 6.7 * 10 ** -11,
                  # scales_______________________________________________
                  "O in Cr2O3 from [O in Cr2O3]": 15.9 * 10 ** -4 * exp((-100800 * 4.184) / (8.314 * (273 + temperature))),
                  "Cr in Cr2O3 from [Cr in Cr2O3]": 0.137 * 10 ** -4 * exp((-61100 * 4.184) / (8.314 * (273 + temperature))),
                  "None": 1 * (10 ** -13)
                  }
    return diff_coeff[cond]


POWERS = np.array([1.1,
1,
0.91304143,
0.23875948,
0.10774248,
0.061070698,
0.039265669,
0.027351838,
0.02013949,
0.015444787,
0.012218988,
0.009907571,
0.008194976,
0.006890893,
0.005875022,
0.00506829,
0.004416995,
0.003883625,
0.003441341,
0.003070522,
0.002756563,
0.002488406,
0.002257557,
0.002057402,
0.001882733,
0.001729398,
0.00159406,
0.001474009,
0.001367026,
0.001271281,
0.001185254,
0.001107672,
0.001037465,
0.000973728,
0.000915689,
0.000862689,
0.00081416,
0.000769614,
0.000728626,
0.000690828,
0.000655896,
0.000623548,
0.000593536,
0.000565639,
0.000539664,
0.000515438,
0.000492807,
0.000471635,
0.000451798,
0.000433187,
0.000415703,
0.000399256,
0.000383767,
0.000369161,
0.000355374,
0.000342345,
0.00033002,
0.000318348,
0.000307285,
0.000296789,
0.000286821,
0.000277347,
0.000268335,
0.000259756,
0.000251581,
0.000243786,
0.000236348,
0.000229245,
0.000222458,
0.000215967,
0.000209757,
0.000203811,
0.000198114,
0.000192652,
0.000187413,
0.000182386,
0.000177557,
0.000172918,
0.000168459,
0.00016417,
0.000160042,
0.000156068,
0.000152241,
0.000148552,
0.000144996,
0.000141566,
0.000138257,
0.000135062,
0.000131977,
0.000128996,
0.000126115,
0.000123329,
0.000120635,
0.000118028,
0.000115505,
0.000113061,
0.000110695,
0.000108402,
0.000106179,
0.000104024,
0.000101935,
9.9907E-05,
9.79393E-05,
9.60292E-05,
9.41745E-05,
9.23729E-05,
9.06226E-05,
8.89215E-05,
8.72679E-05,
8.566E-05,
8.40962E-05])